% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/FLLUDecomp.R
\name{lu.FLMatrix}
\alias{lu.FLMatrix}
\title{LU Decomposition.}
\usage{
\method{lu}{FLMatrix}(object)
}
\arguments{
\item{table}{an object of class FLMatrix}
}
\value{
\item{x}{The "L" (unit lower triangular) and "U" (upper triangular) factors of the original matrix}
\item{perm}{a vector of length min(Dim) that describes the permutation applied to the rows of the original matrix}
\item{Dim}{the dimension of the original matrix}
}
\description{
The LU decomposition involves factorizing a matrix as the product of a lower
triangular matrix L and an upper triangular matrix U. Permutation matrix is also provided in the output.
If permutation matrix is not used in the decomposition, the output of permutation matrix is an identity matrix.
}
\details{
\code{lu} replicates the equivalent lu() generic function.\cr
The wrapper overloads lu and implicitly calls FLLUDecompUdt.\cr
The decomposition is of the form A = P L U where typically all matrices are of size (n x n),
and the matrix P is a permutation matrix, L is lower triangular and U is upper triangular.
}
\section{Constraints}{

Input can only be a square matrix (n x n) with maximum dimension limitations
of (1000 x 1000).
}
\examples{
connection<-odbcConnect("Gandalf")
table <- FLMatrix(connection, "FL_TRAIN", "tblMatrixMulti", 2)
lu(table)
}

