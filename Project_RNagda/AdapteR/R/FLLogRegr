#' @include utilities.R
#' @include data_prep.R
#' @include FLTable.R
NULL
#' An S4 class to represent FLLogRegr
#'
#' @slot formula an object of class 'formula': Model Formulae
#' @slot table_name A character
#' @slot deeptablename A character vector containing name of the deeptable on conversion from a widetable
#' @slot AnalysisID An output character ID from CALL FLLogRegr
#' @slot dataprepID An output character ID from CALL FLRegrDataPrep
#' @slot datatable An object of class FLTable
#' @method print FLLogRegr
#' @param object contains: call,coefficients
#' @method coefficients FLLogRegr
#' @param object a named vector of coefficients
#' @method summary FLLogRegr
#' @param object contains: call,residuals,coefficients,significant codes note and statistical output.
setClass(
	"FLLogRegr",
	slots=list(
		formula="formula",
		table_name="character",
		deeptablename="character",
		AnalysisID="character",
		dataprepID="character",
		datatable="FLTable",
		dataname="character"
	)
)

glm <- function (formula,data,...) {
	UseMethod("glm", data)
 }

glm.data.frame<-stats::glm

#' Linear Regression.
#'
#' \code{glm} performs linear regression on FLTable objects.
#'
#' The wrapper overloads glm and implicitly calls FLRegrDataPrep and FLLogRegr.
#' @method glm FLTable
#' @param formula A symbolic description of model to be fitted
#' @param data An object of class FLTable
#' @section Constraints:
#' None
#' @return \code{glm} performs linear regression and replicates equivalent R output.
#' @examples
#' library(RODBC)
#' connection <- odbcConnect("Gandalf")
#' widetable  <- FLTable(connection, "FL_REV4546", "tblAbaloneWide", "ObsID")
#' glmfit <- glm(Rings~Height+Diameter,widetable)
#' @export
glm.FLTable<-function(formula,data,...){
	dependent <- all.vars(formula)[1]
	independents <- all.vars(formula)[2:length(formula)]
	cols<-names(data)

	unused_cols <- cols[!cols %in% all.vars(formula)]
	unused_cols <- unused_cols[unused_cols!=data@primary_key]

	unused_cols_str <- ""
	for(i in 1:length(unused_cols)){
		unused_cols_str <- paste0(unused_cols_str,unused_cols[i],", ")
		i<-i+1
	}
	deeptablename <- gen_deep_table_name(data@table_name)
	unused_cols_str <- substr(unused_cols_str,1,nchar(unused_cols_str)-2)
	sqlQuery(data@odbc_connection,paste0("DATABASE ",data@db_name))
	sqlQuery(data@odbc_connection,"SET ROLE ALL")
	sqlstr<-paste0("CALL FLRegrDataPrep('",data@table_name,"','",data@primary_key,"','",dependent,"','",deeptablename,"','ObsID','VarID','Num_Val',0,0,0,0,0,0,0,'",unused_cols_str,"',NULL,NULL,NULL,AnalysisID);")
	dataprepID <- as.vector(retobj<-sqlQuery(data@odbc_connection,sqlstr)[1,1])

	AnalysisID<-as.vector(sqlQuery(data@odbc_connection,paste0("CALL FLLogRegr('",deeptablename,"', 'ObsID', 'VarID', 'Num_Val', 'Test', AnalysisID);"))[1,1])

	new("FLLogRegr",
		formula=formula,
		table_name=data@table_name,
		deeptablename=deeptablename,
		AnalysisID=AnalysisID,
		dataprepID=dataprepID,
		datatable=data,
		dataname = deparse(substitute(data))
	)
}