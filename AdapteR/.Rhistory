cbind(rnorm(15, 5, 0.5), rnorm(15, 5, 0.5)),
cbind(rnorm( 3,3.2,0.5), rnorm( 3,3.2,0.5)))
fannyx <- fanny(x, 2)'
x
x <- rbind(cbind(rnorm(10, 0, 0.5), rnorm(10, 0, 0.5)),
cbind(rnorm(15, 5, 0.5), rnorm(15, 5, 0.5)),
cbind(rnorm( 3,3.2,0.5), rnorm( 3,3.2,0.5)))
fannyx <- fanny(x, 2)'
x <- rbind(cbind(rnorm(10, 0, 0.5), rnorm(10, 0, 0.5)),
cbind(rnorm(15, 5, 0.5), rnorm(15, 5, 0.5)),
cbind(rnorm( 3,3.2,0.5), rnorm( 3,3.2,0.5)))
fannyx <- fanny(x, 2)
x <- rbind(cbind(rnorm(10, 0, 0.5), rnorm(10, 0, 0.5)),
cbind(rnorm(15, 5, 0.5), rnorm(15, 5, 0.5)),
cbind(rnorm( 3,3.2,0.5), rnorm( 3,3.2,0.5)))fannyx <- fanny(x, 2)
)
fannyx <- fanny(x,2)
librray(cluster)
library(cluster)
fannyx <- fanny(x,2)
fannyx$membership
x <- rbind(cbind(rnorm(10, 0, 0.5), rnorm(10, 0, 0.5)),
cbind(rnorm(15, 5, 0.5), rnorm(15, 5, 0.5)),
cbind(rnorm( 3,3.2,0.5), rnorm( 3,3.2,0.5)))
fannyx <- fanny(x, 2)
library(cluster)
x <- rbind(cbind(rnorm(10, 0, 0.5), rnorm(10, 0, 0.5)),
cbind(rnorm(15, 5, 0.5), rnorm(15, 5, 0.5)),
cbind(rnorm( 3,3.2,0.5), rnorm( 3,3.2,0.5)))
fannyx <- fanny(x, 2)
fannyx$membership
fannyx$coeff
y <- matrix(1:10,5,2)
f <- fanny(y,2)
y <- matrix(1:20,10,2)
f <- fanny(y,2)
f$membership
f$coeff
t<-f$membership
k<-0
for(i in t) k <- k+(t*t)
t
k
t1<-as.vector(t)
t1
for(i in t1) k <- k+(t1*t1)
k
k<-0
for(i in t1) k <- k+(t1*t1)
k
k<-0
for(i in t1) k <- k+(i*i)
k
k/20
f$coeff
t1<-as.vector(t[,1])
k<-0
for(i in t1) k <- k+(i*i)
k/10
t
t*t
t1<-as.vector(t*t)
for(i in t1) k <- k+(i*i)
k/10
k
0.366*2
k<-0
for(i in t1) k <- k+(i*i)
k/10
t1
t
t1<-as.vector(t)
k<-0
for(i in t1) k <- k+(i*i)
k
t1[1]
c<-fannyx$coeff
class(c)
names(c)
fannyx$memb.exp
fannyx$clustering
fannyx$k.crisp
fannyx$objective
pamx <- pam(x,2)
pamx$objective
fannyx$convergence
?kmeans
?fanny
fannyx$convergence
fannyx$diss
fannyx$silinfo
fannyx$data
x
fannyx$silinfo
class(fannyx)
class(pamx)
library(cluster)
?hclust
require(graphics)
### Example 1: Violent crime rates by US state
hc <- hclust(dist(USArrests), "ave")
plot(hc)
plot(hc, hang = -1)
class(hc)
hc$dist.method
hc$merge
hc$height
?str
?"table"
table(1:3)
table(1:3,1)
table(1:3,2:4)
table(c(1:3,3))
as.factor(1:3)
as.factor(c("a","b"))
factor(c("a","b"),1:2)
?factor
factor(c("a","b"),1:2,1:2)
factor(c("a","b"),1:2)
factor(c("a","b"),,1:2)
factor(x=c("a","b"),labels=1:2)
factor(x=c(1,2),labels=c("a","b"))
?prop.table
?sweep
?prop.table
table(1:3)
prop.table(table(c(1,1,2,3)))
t<-as.data.frame(prop.table(table(c(1,1,2,3))))
t
class(prop.table(table(c(1,1,2,3))))
as.data.frame(table(1:3))
colnames(t)<-c("airline","seniment")
t
colnames(t)<-c("seniment","frequency")
t
as.data.frame(table(c("a","b","c")))
d<-data.frame(y=rnorm(5),x1=rnorm(5),x2=c("a","b","c","b","c"))
d
lm(y~x1+x2)
lm(y~x1+x2,d)
d<-data.frame(y=rnorm(5),x1=rnorm(5),x2=c("a","b","c","d","c"))
lm(y~x1+x2,d)
d<-data.frame(y=rnorm(5),x1=rnorm(5),x2=c("a","b","c","d","e"))
lm(y~x1+x2,d)
glm(y~x1+x2,d)
glm(y~x1+x2,d,family=binomial)
glm(y~x1+x2,d,family=llinear)
install.packages("ggplot")
install.packages("ggplot2")
?ggplot
library(ggplot2)
?ggplot
df <- data.frame(gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30))
ds <- plyr::ddply(df, "gp", plyr::summarise, mean = mean(y), sd = sd(y))
ds
ggplot(df, aes(x = gp, y = y)) +
geom_point() +
geom_point(data = ds, aes(y = mean),
colour = 'red', size = 3)
ggplot(df,aes(x=gp,y=y))
?geom_point
geom_point()
ggplot(df,aes(x=gp,y=y))+geom_point()
ggplot(df,aes(x=gp,y=y))
ggplot(df, aes(x = gp, y = y)) +
geom_point(data = ds, aes(y = mean),
colour = 'red', size = 3)
ggplot(df, aes(x = gp, y = y)) +
geom_point() +
geom_point(data = ds, aes(y = mean),
colour = 'red', size = 3)
?fread
??fread
?data.table
??data.table
df
df[,y:=as.numeric(y)]
install.packages("data.table")
?plot
plot(1:10,type=l)
plot(1:10,type="l")
plot(1:10,type="h")
hist(1:10)
hist(1:10,2)
?hist
hist(1:10)
hist(1:10,2)
hist(1:10)
?lm
?kmeans
?agnes
library(cluster)
?agnes
?kmeans
?fanny
?diana
data(votes.repub)
dv <- diana(votes.repub, metric = "manhattan", stand = TRUE)
dv
dv$order
dv$merge
data(votes.repub)
ag <- agnes(votes.repub, metric = "manhattan", stand = TRUE)
ag$merge
ag$order
install.packages("ClustOfVar")
library(ClustOfVar)
?varkmeans
?kmeansvar
part1 <- kmeansvar(X.quanti=decathlon[,1:10],init=5,nstart=10)
data(decathlon)
part1 <- kmeansvar(X.quanti=decathlon[,1:10],init=5,nstart=10)
part1$var
part1$cluster
head(decathlon)
part1$var
part1$sim
part1 <- kmeansvar(X.quanti=decathlon[,1:10],init=5,nstart=10,matsim = TRUE)
part1$var
part1$sim
part1$wss
part1$E
part1$scores
plot(part1)
plot.hclustvar(part1)
a<-1
stop("hai",a)
library(cluster)
?pam
x <- base::rbind(base::cbind(rnorm(10,0,0.5), rnorm(10,0,0.5)),
base::cbind(rnorm(15,5,0.5), rnorm(15,5,0.5)))
pamx <- pam(x, 2)
pamx$isolation
t<-pamx$isolation
class(t)
t1<-c(0,1,2)
t1<-c(0,1,1,2)
?factor
factor(t1,labels=c("no","L","L*"))
t2<-factor(t1,labels=c("no","L","L*"))
names(t2)<-t1
t2
pamx$silinfo
install.packages("survival")
library(survival)
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
class(lm.D9)
plot(lm.D9)
?step
step(lm.D9)
summary(lm1 <- lm(Fertility ~ ., data = swiss))
slm1 <- step(lm1)
summary(slm1)
slm1$anova
lm1
summary(lm1)
summary(slm1)
slm1$anova
t<-step(lm.D9,test="F")
t<-step(lm.D9)
slm1$anova
anova(lm)
anova(lm.D9)
?anova
?ancova
??ancova
librray(stats)
library(stats)
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
weight~group
lm.D9
summary(lm.D9)
lm.D9$residuals
lm.D9$effects
lm.D9$rank
plot(lm.D9)
t<-lm.D9
class(t)
t$coefficients
class(t$coefficients)
lm.fit(lm.D9)
?lm.fit
rank(t$coefficients)
rank(as.matrix(t$coefficients))
as.matrix(t$coefficients)
rownames(as.matrix(t$coefficients))<-NULL
t$y
t$model
t$effects <- NULL
plot(t)
t$rank <- NULL
plot(t)
t$rank <- 2
plot(t)
plot(t)
t$fitted.values
lm
lm.fit
?lm.fit
rank(1:3)
n <- 7 ; p <- 2
X <- matrix(rnorm(n * p), n, p)
rank(X)
base::rank(X)
X
?rank
library(Matrix)
rankMatrix(X)
rankMatrix(t$coefficients)
rankMatrix(as.matrix(t$coefficients))
t$rank
t$model
rankMatrix(t$model)
class(t$model)
lm
t$fitted.values
rankMatrix(as.matrix(t$fitted.values))
library(stats)
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D90 <- lm(weight ~ group - 1)
lm.D90$rank
mylm<-lm(ctl~trt)
mylm$rank
mylm<-lm(ctl~trt+trt)
mylm$rank
t1<-rnorm(10)
mylm<-lm(ctl~trt+trt+t1)
mylm$rank
mylm<-lm(ctl~trt+t1)
mylm$rank
lm.D9$model
as.matrix(lm.D9$model)
library(Matrix)
rankMatrix(as.matrix(lm.D9$model))
t<-lm.D9
t$residuals <- NULL
plot(t)
t$residuals <- lm.D9$residuals
t$effects <- NULL
plot(t)
t$assign
t$assign<-NULL
plot(t)
t$df.residual
t$contrasts
t$contrasts<-NULL
plot(t)
t$xlevels
t$xlevels<-NULL
plot(t)
t$xlevels <- lm.D9$xlevels
plot(t)
t$qr
t$qr <- NULL
plot(t)
lm.D9 <- lm(weight ~ group,qr=FALSE)
t1<-lm.D9
plot(t1)
lm.D9 <- lm(weight ~ group)
t1$qr <- lm.D9$qr
qr(lm.D9$model)
qr(mylm$model)
mylm$qr
t$df.residual<-NULL
plot(t)
t$qr <- lm.D9$qr
plot(t)
t$df.residual <- lm.D9$df.residual
plot(t)
t$terms
t$terms<-NULL
plot(t)
t$fitted.values<-NULL
plo(t)
plot(t)
t$terms<-lm.D9$terms
plot(t)
t$model<-NULL
plot(t)
t$residuals<-NULL
plot(t)
t$terms
mylm$model
mylm$xlevels
mylm$terms
mylm<-lm(ctl~trt+weight[1:10])
mylm<-lm(ctl~trt+weight[1:10],x=TRUE,y=TRUE)
mylm$x
class(mylm$x)
qr(mylm$x)
mylm$qr
rankMatrix(mylm$x)
mylm$terms<-list()
plot(mylm)
lm.D9$terms
terms(weight~formula)
terms(trash1~trash)
t$terms<-terms(trash1~trash)
t$residuals <- lm.D9$residuals
plot(t)
t$terms<-terms(weight~group)
plot(t)
t$xlevels
t$xlevels<-""
plot(t)
t$call
call()
call("lm")
m<-matrix(1:1000000,1000)
solve(m)
m<-matrix(rnorm(1000000),1000)
solve(m)
plot(lm.D9)
plot(lm.D9)
?plot
plot(lm.D9$fitted.values,lm.D9$residuals)
?plot
plot(lm.D9$fitted.values,lm.D9$residuals,type="o")
plot(lm.D9$fitted.values,lm.D9$residuals,type="l")
plot.lm''
plot.lm
lm.plot
?lm
?plot
plot(lm.D9$fitted.values,lm.D9$residuals,type="b")
lm.D9$fitted.values
plot(lm.D9)
plot(lm.D9$fitted.values,lm.D9$residuals,type="b")
?sqrt
plot(sqrt(lm.D9$fitted.values),lm.D9$residuals,type="b")
plot(lm.D9)
m
mylm$x
mylm$qr
qr(m)
m<-matrix(4000000,2000)
f<-qr(m)
f$qr
m<-matrix(4000000,2000)
m<-matrix(1:4000000,2000)
f<-qr(m)
library(cluster)
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D9$effects
terms(weight~group)
lm.D9$terms
plot(lm.D9)
lm.D9$qr
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group,x=TRUE,y=TRUE)
lm.D9$qr
lm.D9$qr[[1]]
lm.D9$x
t<-lm.D9
t$qr<-t$x
plot(t)
class(t)
t$qr
plot(t)
t$qr[[1]]<-t$x
t$qr<-lm.D9$qr
t$qr[[1]]<-lm.D9$x
plot(t)
t$qr
lm.D9$x
lm.D9$qr
rownames(t$qr[[1]])
colnames(t$qr[[1]])
t$qr[[1]] <- matrix(rnorm(40),20,dimnames=dimnames(t$qr[[1]]))
plot(t)
plot(lm.D9)
a<-c("a","b")
a[-"a"]
a["a"]
setwd("C:/Users/phani/Downloads/AdapteR")
library(RJDBC)
library(testthat)
library(plyr)
library(RODBC)
library(reshape2)
library(cluster)
devtools::load_all("AdapteR")
devtools::document()
devtools::document()
?tr
?rank
?rankMatrix
?Matrix::rankMatrix
