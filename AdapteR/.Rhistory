?FLKMeans
?kmeans
?kmeans.fltable
?kmeans.FLTable
??kmeans.FLTable
?kmeans
?cluster
??cluster
?td.data.frame
??td.data.frame
kmeans(matrix(1:100,1),4)
kmeans(matrix(1:100,1),4,replace=TRUE)
kmeans(matrix(1:100,10),4)
kmeans(matrix(1:100,5),4)
t<-kmeans(matrix(1:100,5),4)
t$cluster
t$centers
?custer
?cluster
??cluster
?kmeans
?system.file
is_number(4)
is.integer(4)
t<-as.integer(4)
is.integer(t)
t<-as.integer(-4.6)
is.integer(t)
t
base::as.integer(-5.6)
base::as.integer(5.6)
is_integer <- function(x) { (x == ceiling(x)||x == floor(x)) }
is_number  <- function(x) { (x == ceiling(x)||x == floor(x))&&(x>=1) }
is_integer(4)
is_integer(4.6)
is_integer(-4.6)
is_number(5.6)
is_number(-5.6)
is_number(-5)
is_number(0.7)
is_number(1.9)
is_number(1)
as.list(environment())
environment()
as.data.frame(environment())
as.vector(environment())
as.numeric(environment())
as.character(environment())
as.list(environment())
?kmeans
c(a=TRUE,b=FALSE)
t<-c(a=TRUE,b=FALSE)
t[a]
t["a"]
t["a"]==TRUE
is.logical(t["a"])
(t["a"])==1
if(t["a"]==TRUE){print("works")}
is.logical(t)
is.numeric(t)
is.vector(t)
library(cluster)
?pam
x <- rbind(cbind(rnorm(10,0,0.5), rnorm(10,0,0.5)),
cbind(rnorm(15,5,0.5), rnorm(15,5,0.5)))
x
pamx <- pam(x, 2)
pamx
summary(pamx)
?silinfo
??silinfo
pamx@clusinfo
isolation(pamx)
pamx$medoids
pamx$id.med
pamx$clustering
pamx$objective
pamx$isolation
pamx$clusinfo
pamx$silinfo
pamx$diss
?dist
pamx$data
dist(pamx$data[1:2,])
pamx$call
?agnes
data(votes.repub)
agn1 <- agnes(votes.repub, metric = "manhattan", stand = TRUE)
agn1
plot(agn1)
x <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
colnames(x) <- c("x", "y")
(cl <- kmeans(x, 2,20,2))
x <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
colnames(x) <- c("x", "y")
(cl <- kmeans(x, 2,20,3))
cl$cluster
cl$centers
cl$iter
?pam
??pam
?cluster
??fuzzykmeans
??fkmeans
?fitted
?kmeans
x <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
colnames(x) <- c("x", "y")
(cl <- kmeans(x, 2))
plot(x, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
fitted.x <- fitted(cl);  head(fitted.x)
resid.x <- x - fitted(cl)
x
fitted.x <- fitted(cl);fitted.x
kmeans(1:4,2)
kmeans(as.matrix(1:4),2)
m<-matrix(1:3000,30)
which(m==m)
?which
which(m==m,TRUE)
m<-matrix(1:10000,100)
which(m==m,TRUE)
which(m==m,TRUE)[10000,]
m<-matrix(1:1000000,1000)
which(m==m,TRUE)[1000000,]
?Matrix
?pam
??pam
x <- rbind(cbind(rnorm(10,0,0.5), rnorm(10,0,0.5)),
cbind(rnorm(15,5,0.5), rnorm(15,5,0.5)))
x
pamx <- pam(x, 2)
library(cluster)
pamx <- pam(x, 2)
pamx
pamx$id.med
pamx$objective
pamx$isolation
?objective
??objective
??build
??swap
pamx$clusinfo
pamx$silinfo
x <- rbind(cbind(rnorm(10,0,0.5), rnorm(10,0,0.5)),
cbind(rnorm(15,5,0.5), rnorm(15,5,0.5)))
pamx <- pam(x, 2)
library(cluster)
x <- rbind(cbind(rnorm(10,0,0.5), rnorm(10,0,0.5)),
cbind(rnorm(15,5,0.5), rnorm(15,5,0.5)))
pamx <- pam(x, 2)
pamx
pamx$clusinfo
pamx$silinfo
pamx$diss
pamx$call
pamx$data
?lm
?datasets
library(help = "datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
?datasets
?"datasets-package"
exists("sqlQuery")
exists("det")
?UseMethod
length(pasteo("hai","lo"))
length(paste0("hai","lo"))
length(paste0(""))
length(paste0())
length()
length("")
cat("hai","lo")
?dbSendUpdate
??dbSendUpdate
?dbcommit
??dbcommit
?sapply
sapply(1:2,function(x)x*x)
lapply(1:2,function(x)x*x)
lapply(list(1:2,3:4),function(x)x*x)
sapply(list(1:2,3:4),function(x)x*x)
list(matrix_id=1,r_id=2)
is.null("")
is.null(c())
is.null(c(""))
is.null(/0)
is.null(\0)
is.null("\0")
is.null(NULL)
is.null("NULL")
is.null()
?tryCatch
tryCatch(stop("yo"),error=function(x)print("inside error"))
?odbcGetErrMsg
?sqlQuery
connection <- odbcConnect("Gandalf")
connection <- odbcConnect("Gandalf")
t<-sqlQuery(connection,"selectt * from tblMatrixMulti",errors = F)
t
t<-sqlQuery(connection,"select * from tblMatrixMulti",errors = F)
t
t<-sqlQuery(connection,"select * from tbMatrixMulti",errors = F)
t
sqlQuery(connection,"select * from tbMatrixMulti",errors = F)
sqlQuery(connection,"select * from tblMatrixMulti",errors = F)
odbcGetErrMsg(connection)
sqlQuery(connection,"select * from tbMatrixMulti",errors = F)
odbcGetErrMsg(connection)
sqlQuery(connection,"select * from tblMatrixMulti",errors = F)
odbcGetErrMsg(connection)
sqlQuery(connection,"select * from tbMatrixMulti",errors = T)
odbcGetErrMsg(connection)
sqlQuery(connection,"select * from tbMatrixMulti",errors = T)
odbcGetErrMsg(connection)
sqlQuery(connection,"select * from tbMatrixMulti",errors = T)
sqlQuery(connection,"select * from tbMatrixMulti",errors = F)
sqlQuery(connection,"select * from tblMatrixMulti",errors = F)
odbcGetErrMsg(connection)
class(connection)
sqlQuery(connection,"select -1",errors = F)
t<-sqlQuery(connection,"select -1",errors = F)
t
class(t)
t==-1
?sparsematrix
Matrix(matrix(c(1:3,0),2),sparse = T)
t<-Matrix(matrix(c(1:3,0),2),sparse = T)
mdeep<-Matrix::summary(t)
mdeep
nrow(mdeep)
t<-Matrix(matrix(c(1:3,0,0,0,1:3),3),sparse = T)
T
t
t<-Matrix(matrix(c(1:3,0,0,0,1:2,0),3),sparse = T)
mdeep<-Matrix::summary(t)
mdeep
t<-Matrix(matrix(1:4,2),sparse = T)
t
Matrix::summary(t)
?setMethod
install.packages("shiny")
??shiny
?setdiff
setiff(1:2,3:4)
setdiff(1:2,3:4)
a=1
a=1
det(matrix(1:25,5,5))
det(matrix(1:25,5,5))
1:25
matrix(1:25,5,5)
matrix(1:25,5,4)
salary <- c(18700000,14626720,14137500,13980000,12916666)
> position <- c("QB","QB","DE","QB","QB")
> team <- c("Colts","Patriots","Panthers","Bengals","Giants")
> name.last <- c("Manning","Brady","Pepper","Palmer","Manning")name.first <- c("Peyton","Tom","Julius","Carson","Eli")
salary <- c(18700000,14626720,14137500,13980000,12916666)position <- c("QB","QB","DE","QB","QB")
team <- c("Colts","Patriots","Panthers","Bengals","Giants")                      name.last <- c("Manning","Brady","Pepper","Palmer","Manning")                      name.first <- c("Peyton","Tom","Julius","Carson","Eli")
salary <- c(18700000,14626720,14137500,13980000,12916666)
position <- c("QB","QB","DE","QB","QB")
team <- c("Colts","Patriots","Panthers","Bengals","Giants")
name.last <- c("Manning","Brady","Pepper","Palmer","Manning")
name.first <- c("Peyton","Tom","Julius","Carson","Eli")
salary <- c(18700000,14626720,14137500,13980000,12916666)
position <- c("QB","QB","DE","QB","QB")
team <- c("Colts","Patriots","Panthers","Bengals","Giants")
name.last <- c("Manning","Brady","Pepper","Palmer","Manning")
name.first <- c("Peyton","Tom","Julius","Carson","Eli")
top.5.salaries <- data.frame(name.last,name.first,team,position,salary)
edit(top.5.salaries)
save(top.5.salaries,
file="C:Users/STPL/Downloads/top.5.salaries.rda")
save(top.5.salaries,
file="C:Users/STPL/Downloads")
save(top.5.salaries,
file="C:/Users/STPL/Downloads")
save(top.5.salaries,
file="D:/")
save(top.5.salaries,file="~/top.5.salaries.RData")
getwd()
load(~/top.5.salaries)
load("~/top.5.salaries")
load("~/top.5.salaries.RData")
load("~/top.5.salaries.RData")
write.table(top.5.salaries,"~/fromWrite.Table")
write.csv(top.5.salaries,"~/fromWrite.Table")
library(RJDBC)
read.table(top.5.salaries,"~/fromWrite.Table")
read.table(top.5.salaries,"fromWrite.Table")
read.table(top.5.salaries,"fromWrite")
read.table("~/fromWrite.Table")
?gsub
class(Matrix(1:4,2))
sqlstr0<-paste0("INSERT INTO ","tblName",
paste0(" SELECT ",max_vector_id_value,1:length(object),
object,collapse=","),";")
sqlstr0<-paste0("INSERT INTO ","tblName",
paste0(" SELECT ",100,1:4,
21:24,collapse=","),";")
paste0("INSERT INTO ","tblName",
paste0(" SELECT ",100,1:4,
21:24,collapse=","),";")
paste0("INSERT INTO ","tblName"," SELECT ","100",
paste0(1:4,","
21:24,collapse=";"))
paste0("INSERT INTO ","tblName"," SELECT ","100",
paste0(1:4,",",
21:24,collapse=";"))
apply(21:24,FUN=function(x)paste0("INSERT INTO ","tblName"," SELECT ","100",
paste0(1:4,",",
x,collapse=";")))
lapply(21:24,FUN=function(x)paste0("INSERT INTO ","tblName"," SELECT ","100",
paste0(1:4,",",
x,collapse=";")))
sapply(21:24,FUN=function(x){paste0("INSERT INTO ","tblName"," SELECT ","100",",",
i,",",x,collapse=";");i<-i+1;})
i<-0
sapply(21:24,FUN=function(x){paste0("INSERT INTO ","tblName"," SELECT ","100",",",
i,",",x,collapse=";");i<-i+1;})
i<-0
sapply(21:24,FUN=function(x){i=i+1;return(paste0("INSERT INTO ","tblName"," SELECT ","100",",",
i,",",x,collapse=";"))})
sapply(21:24,FUN=function(x){i=i+1;return(paste0("INSERT INTO ","tblName"," SELECT ","100",",",
i,",",x,";"))})
i<-0
sapply(21:24,FUN=function(x){i<-i+1;return(paste0("INSERT INTO ","tblName"," SELECT ","100",",",
i,",",x,";"))})
sapply(21:24,FUN=function(x){i<<-i+1;return(paste0("INSERT INTO ","tblName"," SELECT ","100",",",
i,",",x,";"))})
v<-21:24
sapply(1:4,FUN=function(x){i<<-i+1;return(paste0("INSERT INTO ","tblName"," SELECT ","100",",",
x,",",v[x],";"))})
paste(sapply(1:4,FUN=function(x){i<<-i+1;return(paste0("INSERT INTO ","tblName"," SELECT ","100",",",
x,",",v[x],";"))}),collapse = "\n")
m
m[2]
m[3]
as.vector(m)
M<-Matrix(1:4,2,sparse = T)
M
M<-Matrix(c(1:3,0),2,sparse = T)
M
M[4]
Matrix(diag(2),sparse = T)
?"dgTMatrix-class"
m <- Matrix(0+1:28, nrow = 4)
m[-3,c(2,4:5,7)] <- m[ 3, 1:4] <- m[1:3, 6] <- 0
(mT <- as(m, "dgTMatrix"))
mT
mT[3]
?"dsCMatrix-class"
mm <- Matrix(toeplitz(c(10, 0, 1, 0, 3)), sparse = TRUE)
mm
mm[4]
as.vector(mm)
d
as.matrix(d)
d[[1]]<-c("a","b")
d
as.matrix(d)
d[[1]]<-c(1,2)
is.numeric(d)
is.numeric(as.matrix(d))
d[[1]]<-c("a","b")
is.numeric(as.matrix(d))
matrix(1:4)
?agnes
??agnes
?cluster::agnes
?hclust
hc <- hclust(dist(USArrests), "ave")
plot(hc)
hc$merge
hc$height
hc$order
hc$labels
dist(USArrests)
nrow(USArrests)
col(USArrests)
ncol(USArrests)
colnames(USArrests)
dim(dist(USArrests))
dims(dist(USArrests))
dim(as.matrix((dist(USArrests)))
)
hc$merge
hc$height
hc$order
length(hc$order)
setwd("C:/Users/STPL/Downloads/AdapteR")
devtools::load_all("AdapteR")
library(testthat)
library(plyr)
connection <- odbcConnect("Gandalf")
FLStartSession(connection)
m3 <- FLMatrix(connection,"FL_DEMO","tblmatrixMulti",3,"Matrix_id") #  Non-Square Matrix of dimension 4x5
connection <- odbcConnect("Gandalf")
m3 <- FLMatrix(connection,"FL_DEMO","tblmatrixMulti",3,"Matrix_id") #  Non-Square Matrix of dimension 4x5
"ROW_ID","COL_ID","CELL_VAL") #  Non-Square Matrix of dimension 4x5
m3 <- FLMatrix(connection,"FL_DEMO","tblmatrixMulti",3,"Matrix_id","ROW_ID","COL_ID","CELL_VAL") #  Non-Square Matrix of dimension 4x5
t<-store(m3)
t
t<-updateVariable(m3,"MATRIX_ID",2)
?gsub
gsub("'\\.'",".","hai.me")
gsub("'\\.'",".","haime")
gsub("'\\.'",".",".haime")
gsub("'\\.'",".","\\.haime")
gsub("h",".","\\.haime")
gsub("'\\.'",".","\\.haime.k")
gsub("'\\.'",".","o.haime.k")
t@select@variables
t<-updateVariable(m3,"MATRIX_ID","3")
t@select@variables
?llply
?ldply
m3@select@variables
fl<-initF.FLMatrix(5)
setwd("C:/Users/STPL/Downloads/AdapteR")
devtools::load_all("AdapteR")
library(testthat)
library(plyr)
connection <- odbcConnect("Gandalf")
FLStartSession(connection)
m3 <- FLMatrix(connection,"FL_DEMO","tblmatrixMulti",3,"Matrix_id","ROW_ID","COL_ID","CELL_VAL") #  Non-Square Matrix of dimension 4x5
m3@select@variables
t<-updateVariable(m3,"rowIdColumn",2)
t@select@variables
gsub("'\.'",".","o.haime.k")
gsub("'\\.'",".","o.haime.k")
gsub("'//.'",".","o.haime.k")
gsub("'//.'","t","o.haime.k")
?sapply
?apply
?cumsum
cumsum(1:2)
rbind(m<-matrix(1:3,1),m)
base::rbind(m<-matrix(1:3,1),m)
m
data.frame(a=1:2,b=3:4)
data.frame(a=1:2,b=3:4)[[1]]
d<-data.frame(a=1:2,b=3:4)[[1]]
apply(d,2,cumsum)
dim(d)
d
d<-data.frame(a=1:2,b=3:4)
apply(d,2,cumsum)
connection <- odbcConnect("Gandalf")
connection <- odbcConnect("Gandalf")
eqnRtn <- FLMatrix(
connection,
database          = "FL_DEMO",
matrix_table      = "finEquityReturns",
matrix_id_value   = "",
matrix_id_colname = "",
row_id_colname    = "TxnDate",
col_id_colname    = "TickerSymbol",
cell_val_colname  = "EquityReturn")
a <- eqnRtn[2001:2010,"MSFT"]
b <- eqnRtn[2001:2010,"ORCL"]
a2 <- eqnRtn[2011:2020,"MSFT"]
b2 <- eqnRtn[2011:2020,"ORCL"]
connection <- odbcConnect("Gandalf")
eqnRtn <- FLMatrix(
connection,
database          = "FL_DEMO",
matrix_table      = "finEquityReturns",
matrix_id_value   = "",
matrix_id_colname = "",
row_id_colname    = "TxnDate",
col_id_colname    = "TickerSymbol",
cell_val_colname  = "EquityReturn")
a <- eqnRtn[2001:2010,"MSFT"]
b <- eqnRtn[2001:2010,"ORCL"]
a2 <- eqnRtn[2011:2020,"MSFT"]
b2 <- eqnRtn[2011:2020,"ORCL"]
cat(constructSelect(a,"a"))
a
ab <- cbind(a,b)
ab@parts
ab@parts[[1]]@select@variables
ab@parts[[2]]@select@variables
ab
cat(constructSelect(ab))
