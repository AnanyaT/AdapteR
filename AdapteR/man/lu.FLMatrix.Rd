% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/FLLUDecomp.R
\name{lu.FLMatrix}
\alias{lu.FLMatrix}
\title{LU Decomposition.}
\usage{
\method{lu}{FLMatrix}(object)
}
\arguments{
\item{object}{is of class FLMatrix}
}
\value{
\item{x}{the FLVector form of "L" (unit lower triangular) and "U" (upper triangular) factors of the original matrix}
\item{perm}{FLVector that describes the permutation applied to the rows of the original matrix}
\item{Dim}{FLVector that gives the dimension of the original matrix}
\item{lower}{FLMatrix representing the lower triangular matrix}
\item{upper}{FLMatrix representing the upper triangular matrix}
\item{data_perm}{FLMatrix representing the permutation matrix}
}
\description{
The LU decomposition involves factorizing a matrix as the product of a lower
triangular matrix L and an upper triangular matrix U. Permutation matrix is also provided in the output.
If permutation matrix is not used in the decomposition, the output of permutation matrix is an identity matrix.
}
\details{
\code{lu} replicates the equivalent lu() generic function.\cr
The wrapper overloads lu and implicitly calls FLLUDecompUdt.\cr\cr
\code{expand} decomposes the compact form to a list of matrix factors.\cr
The expand method returns L,U and P factors as a list of FLMatrices.\cr

The decomposition is of the form A = P L U where typically all matrices are of size (n x n),
and the matrix P is a permutation matrix, L is lower triangular and U is upper triangular.
}
\section{Constraints}{

Input can only be with maximum dimension limitations
of (1000 x 1000).
}
\examples{
connection<-odbcConnect("Gandalf")
flmatrix <- FLMatrix(connection, "FL_TRAIN", "tblMatrixMulti", 5)
FLLUobject <- lu(flmatrix)
expand(FLLUobject)
expand(lu(flmatrix))$L
expand(lu(flmatrix))$U
expand(lu(flmatrix))$P
}

