importFrom("stats"
         , "contrasts<-", cov2cor, cor
         , diffinv, model.frame, rnorm, runif
         , symnum, terms
         , toeplitz, update#, vcov
           )

## try to import all we need, but not more
importFrom("methods"
	   ## still needed {group generics needed to be explicitly imported} ?
         , Ops, Arith, Compare, Logic, Math, Math2, Summary, Complex
	   ## generics for which we export new methods:
         , cbind2, rbind2, coerce, show
         , kronecker
	   ## things we call,.. necessary when Matrix is loaded, but not attached, as in
	   ## Rscript --vanilla -e 'require(methods);(M <- Matrix::Matrix(0:1,3,3));as(M,"sparseMatrix")'
         , as, is, extends, new
         , callGeneric, callNextMethod
         , .selectSuperClasses, .slotNames, canCoerce, packageSlot
         , getClass, getClassDef, validObject
         , setClass, setClassUnion, setMethod, setOldClass
         , setValidity, slot, "slot<-", slotNames, .hasSlot
         , signature, representation, prototype)

exportMethods(
    ## Group Methods
    "chol",
    "colMeans",
    "colSums",
    "diag",
    "qr",

    "rowMeans",
    "rowSums",
    "t",

    "%%",
    "%*%",
    "%/%",
    "*",
    "+",
    "-",
    "/"
    )

S3method(svd,FLMatrix)
S3method(tr,FLMatrix)
S3method(identical,FLMatrix)
S3method(eigen,FLMatrix)
S3method(det,FLMatrix)
S3method(cor,FLMatrix)

S3method("==",FLMatrix)
S3method("[",FLMatrix)
S3method("[",FLTable)
S3method("[",FLVector)
S3method(glm,FLTable)
S3method(kmeans,FLTable)
S3method(lm,FLTable)
S3method(lu,FLMatrix)
S3method(rbind,FLMatrix)
S3method(solve,FLMatrix)

export(FLHessen)
export(FLJordan)
export(FLMatrix)
export(FLMatrixNorm)
export(FLMatrixREF)
export(FLMatrixRREF)
export(FLSV)
export(FLSolveExcl)
export(FLStartSession)
export(FLTable)
export(FLTriDiag)
export(FLVector)
export(ginv)
export(rankMatrix)
export(restrictFLMatrix)
export(wideToDeep)
export(deepToWide)

